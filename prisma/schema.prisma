generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  SELLER
  BUYER
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  email      String  @unique
  password   String
  role       Role    @default(BUYER)
  isVerified Boolean @default(false) @map("is_verified")
  isDeleted  Boolean @default(false) @map("is_deleted")

  profileId String?  @map("profile_id") @db.ObjectId
  profile   Profile?

  otpId String? @map("otp_id") @db.ObjectId
  otp   Otp?

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")
}

enum OtpType {
  VERIFY_EMAIL
  RESET_PASSWORD
}

model Otp {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  code String
  type OtpType @default(VERIFY_EMAIL)

  userId String @unique @map("user_id") @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")
}

model File {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  orignialName String  @map("orignial_name")
  name         String
  type         String
  size         Int
  url          String
  isDeleted    Boolean @default(false) @map("is_deleted")

  productId String  @map("product_id") @db.ObjectId
  product   Product @relation(fields: [productId], references: [id])

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")
}

model Profile {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  firstName String @map("first_name")
  lastName  String @map("last_name")

  userId String @unique @map("user_id") @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")
}

model Category {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  name      String
  isDeleted Boolean @default(false) @map("is_deleted")

  products Product[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")
}

model Vendor {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  name      String
  isDeleted Boolean @default(false) @map("is_deleted")

  products Product[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")
}

model Product {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  name        String
  description String
  price       Float
  salePrice   Float?  @map("sale_price")
  sku         String
  stock       Int
  isDeleted   Boolean @default(false) @map("is_deleted")

  images File[]

  categoryId String   @map("category_id") @db.ObjectId
  category   Category @relation(fields: [categoryId], references: [id])

  vendorId String @map("vendor_id") @db.ObjectId
  vendor   Vendor @relation(fields: [vendorId], references: [id])

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")
}
